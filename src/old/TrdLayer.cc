/// \file TrdLayer.cc
/*
 *
 * TrdLayer.cc cpp file template generated by fclass
 * Creation date : Tue Aug 28 11:18:18 2012
 * Copyright (c) 2012 Rémi Eté
 * All Right Reserved.
 *
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 *
 * Written by : R. Eté
 */


#include "TrdLayer.hh"

using namespace std ;

TrdLayer::TrdLayer(const G4String &name,
      G4double dx,
      G4double dy1,
      G4double dy2,
      G4double dz ,
      G4Material *material) {

   layerName = G4String(name) ;
   trapezoid = new G4Trd (G4String(layerName) + "Shape", dx , dx , dy1 , dy2 , dz) ;
   logicalVolume = new G4LogicalVolume(trapezoid , material , G4String(layerName) + "Volume") ;
}


TrdLayer::~TrdLayer() {
   delete trapezoid ;
   delete logicalVolume ;
}


G4VPhysicalVolume *TrdLayer::PlaceLayer(G4RotationMatrix *pRot,
      G4ThreeVector tlate,
      G4LogicalVolume *pMotherLogical,
      G4int copyNo) {

   placement = new G4PVPlacement (pRot,
	 tlate,
	 logicalVolume,
	 layerName/* + "Placement"*/,
	 pMotherLogical,
	 false,
	 copyNo) ;
   return placement ;
}
